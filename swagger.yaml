swagger: '2.0'
info:
  description: EPABO API documentation
  version: 0.0.1
  title: EPABO API
  contact: {}
  license: {}
host: 'localhost:8080'
basePath: /
tags:
  - name: account-resource
    description: Account Resource
  - name: gasto-resource
    description: Gasto Resource
  - name: oportunidad-resource
    description: Oportunidad Resource
  - name: user-jwt-controller
    description: User JWT Controller
  - name: user-resource
    description: User Resource
paths:
  /api/account:
    get:
      tags:
        - account-resource
      summary: getAccount
      operationId: getAccountUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - account-resource
      summary: saveAccount
      operationId: saveAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/account/change-password:
    post:
      tags:
        - account-resource
      summary: changePassword
      operationId: changePasswordUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: passwordChangeDto
          description: passwordChangeDto
          required: true
          schema:
            $ref: '#/definitions/PasswordChangeDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/account/reset-password/finish:
    post:
      tags:
        - account-resource
      summary: finishPasswordReset
      operationId: finishPasswordResetUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: keyAndPassword
          description: keyAndPassword
          required: true
          schema:
            $ref: '#/definitions/KeyAndPasswordVM'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/account/reset-password/init:
    post:
      tags:
        - account-resource
      summary: requestPasswordReset
      operationId: requestPasswordResetUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: mail
          description: mail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/activate:
    get:
      tags:
        - account-resource
      summary: activateAccount
      operationId: activateAccountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: key
          in: query
          description: key
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/authenticate:
    get:
      tags:
        - account-resource
      summary: isAuthenticated
      operationId: isAuthenticatedUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - user-jwt-controller
      summary: authorize
      operationId: authorizeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginVM
          description: loginVM
          required: true
          schema:
            $ref: '#/definitions/LoginVM'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JWTToken'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/gastos:
    get:
      tags:
        - gasto-resource
      summary: getAllGastos
      operationId: getAllGastosUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Gasto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - gasto-resource
      summary: createGasto
      operationId: createGastoUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: gasto
          description: gasto
          required: true
          schema:
            $ref: '#/definitions/Gasto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Gasto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - gasto-resource
      summary: updateGasto
      operationId: updateGastoUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: gasto
          description: gasto
          required: true
          schema:
            $ref: '#/definitions/Gasto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Gasto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/gastos/{id}':
    get:
      tags:
        - gasto-resource
      summary: getGasto
      operationId: getGastoUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Gasto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - gasto-resource
      summary: deleteGasto
      operationId: deleteGastoUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/oportunidads:
    get:
      tags:
        - oportunidad-resource
      summary: getAllOportunidads
      operationId: getAllOportunidadsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Oportunidad'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - oportunidad-resource
      summary: createOportunidad
      operationId: createOportunidadUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: oportunidad
          description: oportunidad
          required: true
          schema:
            $ref: '#/definitions/Oportunidad'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Oportunidad'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - oportunidad-resource
      summary: updateOportunidad
      operationId: updateOportunidadUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: oportunidad
          description: oportunidad
          required: true
          schema:
            $ref: '#/definitions/Oportunidad'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Oportunidad'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/oportunidads/getForUser/{id}':
    get:
      tags:
        - oportunidad-resource
      summary: getForUser
      operationId: getForUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Oportunidad'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/oportunidads/{id}':
    get:
      tags:
        - oportunidad-resource
      summary: getOportunidad
      operationId: getOportunidadUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Oportunidad'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - oportunidad-resource
      summary: deleteOportunidad
      operationId: deleteOportunidadUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /api/register:
    post:
      tags:
        - account-resource
      summary: registerAccount
      operationId: registerAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: managedUserVM
          description: managedUserVM
          required: true
          schema:
            $ref: '#/definitions/ManagedUserVM'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/users:
    get:
      tags:
        - user-resource
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          type: integer
          format: int32
        - name: size
          in: query
          description: Size of a page
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - user-resource
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
        - user-resource
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: userDTO
          description: userDTO
          required: true
          schema:
            $ref: '#/definitions/UserDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/users/authorities:
    get:
      tags:
        - user-resource
      summary: getAuthorities
      operationId: getAuthoritiesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/users/{login}':
    get:
      tags:
        - user-resource
      summary: getUser
      operationId: getUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: login
          in: path
          description: login
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
        - user-resource
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: login
          in: path
          description: login
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  Gasto:
    type: object
    required:
      - descripcion
      - montoGasto
      - userId
    properties:
      descripcion:
        type: string
      fecha:
        type: string
        format: date
      fechaModificacion:
        type: string
        format: date
      id:
        type: integer
        format: int64
      montoGasto:
        type: number
        format: double
      userId:
        type: integer
        format: int64
    title: Gasto
  JWTToken:
    type: object
    properties:
      id_token:
        type: string
    title: JWTToken
  KeyAndPasswordVM:
    type: object
    properties:
      key:
        type: string
      newPassword:
        type: string
    title: KeyAndPasswordVM
  LoginVM:
    type: object
    required:
      - password
      - username
    properties:
      password:
        type: string
        minLength: 4
        maxLength: 100
      rememberMe:
        type: boolean
      username:
        type: string
        minLength: 1
        maxLength: 50
    title: LoginVM
  ManagedUserVM:
    type: object
    properties:
      activated:
        type: boolean
      authorities:
        type: array
        items:
          type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date-time
      email:
        type: string
        minLength: 5
        maxLength: 254
      firstName:
        type: string
        minLength: 0
        maxLength: 50
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
        minLength: 0
        maxLength: 256
      langKey:
        type: string
        minLength: 2
        maxLength: 6
      lastModifiedBy:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
      lastName:
        type: string
        minLength: 0
        maxLength: 50
      login:
        type: string
        minLength: 1
        maxLength: 50
        pattern: '^[_.@A-Za-z0-9-]*$'
      password:
        type: string
        minLength: 4
        maxLength: 100
    title: ManagedUserVM
  Oportunidad:
    type: object
    required:
      - autor
      - descripcion
      - email
      - tags
      - ubicacion
    properties:
      autor:
        type: integer
        format: int64
      descripcion:
        type: string
      email:
        type: string
      fecha:
        type: string
        format: date
      id:
        type: integer
        format: int64
      tags:
        type: string
      ubicacion:
        type: string
      urlImagen:
        type: string
    title: Oportunidad
  PasswordChangeDTO:
    type: object
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    title: PasswordChangeDTO
  User:
    type: object
    required:
      - activated
      - login
    properties:
      activated:
        type: boolean
      email:
        type: string
        minLength: 5
        maxLength: 254
      firstName:
        type: string
        minLength: 0
        maxLength: 50
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
        minLength: 0
        maxLength: 256
      langKey:
        type: string
        minLength: 2
        maxLength: 6
      lastName:
        type: string
        minLength: 0
        maxLength: 50
      login:
        type: string
        minLength: 1
        maxLength: 50
        pattern: '^[_.@A-Za-z0-9-]*$'
      resetDate:
        type: string
        format: date-time
    title: User
  UserDTO:
    type: object
    properties:
      activated:
        type: boolean
      authorities:
        type: array
        items:
          type: string
      createdBy:
        type: string
      createdDate:
        type: string
        format: date-time
      email:
        type: string
        minLength: 5
        maxLength: 254
      firstName:
        type: string
        minLength: 0
        maxLength: 50
      id:
        type: integer
        format: int64
      imageUrl:
        type: string
        minLength: 0
        maxLength: 256
      langKey:
        type: string
        minLength: 2
        maxLength: 6
      lastModifiedBy:
        type: string
      lastModifiedDate:
        type: string
        format: date-time
      lastName:
        type: string
        minLength: 0
        maxLength: 50
      login:
        type: string
        minLength: 1
        maxLength: 50
        pattern: '^[_.@A-Za-z0-9-]*$'
    title: UserDTO
